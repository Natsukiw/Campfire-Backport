tile.campfire_base.name=Campfire Base
tile.campfire.name=Campfire
tile.soul_campfire_base.name=Soul Campfire Base
tile.soul_campfire.name=Soul Campfire
tile.campfire.inventory.name=Campfire Cooking


campfirebackport.reg=regular
campfirebackport.soul=soul
campfirebackport.extinguisher=Extinguisher
campfirebackport.ignitor=Ignitor


campfirebackport.preinit.rename_old_config=Renaming old (v1.3 or earlier) config file, and creating a new one!
campfirebackport.preinit.rename_old_config.error.0=Failed to rename old (v1.3 or earlier) config file. Config will be loaded from default settings instead.
campfirebackport.preinit.rename_old_config.error.1=Delete or rename the old config file, then restart minecraft to get a new one.
campfirebackport.preinit.rename_old_config.error.2=No settings will be saved from the in-game config screen.
campfirebackport.preinit.create_explanation=Creating config explanation file!
campfirebackport.preinit.create_explanation.error.0=Failed to create config explanation file.
campfirebackport.preinit.create_explanation.error.1=You could check it out on the github instead: https://github.com/connor135246/Campfire-Backport


campfirebackport.info.parsing_recipes=Parsing custom recipes...
campfirebackport.info.parsing_auto_blacklist=Parsing Auto Recipe Discovery Blacklist...
campfirebackport.info.discovering_autos=Discovering furnace recipes...
campfirebackport.info.adding_autos=Adding discovered furnace recipes to recipe list...
campfirebackport.info.sorting_recipes=Sorting final list of recipes...

campfirebackport.info.parsing_dispenser_blacklist=Parsing Dispenser Behaviours Blacklist...
campfirebackport.info.parsing_state_changers=Parsing custom extinguishers/ignitors...
campfirebackport.info.sorting_state_changers=Sorting final list of custom extinguishers/ignitors...

campfirebackport.info.print_recipes.reg=-Regular Campfire Recipes:
campfirebackport.info.print_recipes.soul=-Soul Campfire Recipes:
campfirebackport.info.print_state_changers=-Campfire Extinguishers/Ignitors:


campfirebackport.inputerror.invalid_ench_id=Input "%s" has an invalid Enchantment ID!
campfirebackport.inputerror.invalid_fluid=Input "%s" had an invalid fluid!
campfirebackport.inputerror.invalid_nbt=Input "%s" has invalid NBT!
campfirebackport.inputerror.invalid_class=Class "%s" not found!
campfirebackport.inputerror.invalid_ore=Ore "%s" not found!
campfirebackport.inputerror.invalid_state_changer=Campfire %1$s "%2$s" has invalid inputs/settings!
campfirebackport.inputerror.invalid_recipe=Recipe "%s" has invalid inputs/outputs!
campfirebackport.inputerror.invalid_auto_blacklist=Auto Recipe Discovery Blacklist entry "%s" is invalid!
campfirebackport.inputerror.invalid_signal_fire_block=Signal Fire Blocks entry "%s" is invalid!
campfirebackport.inputerror.invalid_drops=Campfire Drops entry "%s" is invalid! Using default drop instead!
campfirebackport.inputerror.invalid_dispenser_blacklist=Dispenser Behaviours Blacklist entry "%s" is invalid!
campfirebackport.inputerror.invalid_dispensable=Input "%s" specified dispensable, but Data inputs can't be dispensable!
campfirebackport.inputerror.invalid_tool_or_class=Your specified tool or Class found no matching items! 


campfirebackport.nei.cooking_recipe=Campfire Cooking
campfirebackport.nei.state_changer_recipe=Extinguishing/Igniting
campfirebackport.nei.ore_input=Ore: %s
campfirebackport.nei.tool_input=Any %s-type tool
campfirebackport.nei.class_input=Any %s.class
campfirebackport.nei.burns_away=Burns away if left cooking too long
campfirebackport.nei.enchantment_data=Enchantment Level %s or greater
campfirebackport.nei.fluid_data=Containing at least %1$s mB of %2$s
campfirebackport.nei.nbt_data=NBT Must Match:
campfirebackport.nei.dispensable=Works from a dispenser
campfirebackport.nei.anything=<Anything>
campfirebackport.nei.any_tinkers=<Any Tinker's Construct Tool>
campfirebackport.nei.tinkers_mods=Modifiers:
campfirebackport.nei.damage_by=Damages item by %s point(s)
campfirebackport.nei.onlysignal=Must be a signal fire
campfirebackport.nei.notsignal=Must not be a signal fire


campfirebackport.waila.empty=Empty


campfirebackport.command.nbt.usage=/campfirebackport_nbt OR /campfirebackport_nbt <x> <y> <z>
campfirebackport.command.nbt.not_a_player=Only players can use the command in that format
campfirebackport.command.nbt.no_held_item=Selected slot is empty
campfirebackport.command.nbt.block_out_of_world=Selected block is outside of the world
campfirebackport.command.nbt.no_tile_entity=Selected block doesn't have a tile entity


campfirebackport.config.rename_old_config.error=You had an old (v1.3 or earlier) config file on game load! Config settings have changed a lot since then!

campfirebackport.config.explain.charcoal=If true, regular campfires can be crafted only using charcoal. In vanilla either coal or charcoal can be used, but breaking campfires always drops charcoal. If for some reason you don't want players to be able to turn coal into charcoal, turn this on.
campfirebackport.config.explain.soul_soil=If true, soul campfires can be crafted only using soul soil from Netherlicious. In vanilla either soul sand or soul soil can be used, but breaking campfires always drops soul soil. If for some reason you don't want players to be able to turn soul sand into soul soil, turn this on. This won't do anything if Netherlicious isn't installed!
campfirebackport.config.explain.regen=Lit campfires of this type will periodically apply a regeneration effect to nearby players.
campfirebackport.config.explain.regen_settings=First value is regen level, from 0 to 31. Second value is the timer on the regen effect to apply (in ticks). Third value is the radius from the campfire, from 0 to 100. Fourth value is the time between each application of regeneration (in ticks). Varies a little bit around this value.
campfirebackport.config.explain.auto=Campfires of this type will look through every single furnace recipe to find ones that result in an ItemFood, and add those to its list.
campfirebackport.config.explain.auto_blacklist=Prevents Auto Recipe Discovery from adding furnace recipes that use these inputs to the recipe list. It's pattern validated. Format is "ore:oreName" or 'modid:name" or "modid:name:meta". If meta is not given, all metas of the item are blocked.
campfirebackport.config.explain.recipes=The list of Custom Recipes for the %1$s campfire. It's pattern validated. Here's the general simple setup: First, an item in the format "modid:name:meta@number", with ":meta" defaulting to 0 if not included, and "@number" defaulting to 1. Then put a /. Next is the output, in the same format as input. The next part is optional: a /, then a number for the cooking time in ticks. If not included, defaults to 600. Take a look at the default recipes. It actually can be way more complicated than this, if you wish. Check the file in your config folder named %2$s (or the github) for # [Custom Recipes].
campfirebackport.config.explain.recipes_inheritance=Allows you to make campfires of one type inherit Custom Recipes from the other type. That way you don't have to type them all out twice.
campfirebackport.config.explain.automation=Hoppers and other forms of automation will be able to insert items into these types of campfires from the sides.
campfirebackport.config.explain.default_unlit=The unlit version of this type of campfire is the default one, instead of the lit one. Requires restart to change recipes.
campfirebackport.config.explain.remember_state=Campfires of this type will remember the state they're in when broken and drop in the corresponding item form. As in, breaking a lit campfire always drops a lit campfire, and breaking an unlit campfire always drops an unlit campfire, regardless of the setting of Unlit by Default.
campfirebackport.config.explain.silk=Campfires of this type need Silk Touch to drop themselves when broken.
campfirebackport.config.explain.rained_out=Campfires of this type will be put out by rain. It's rather slow...
campfirebackport.config.explain.burn_out_timer=The amount of time, in ticks, until campfires burn out. Setting to -1 disables burn out and lets them last forever. The first value is the setting for regular campfires, the second value is the setting for soul campfires. Varies a little bit around the given values. By default, signal fires won't burn out. See Burn Out (Signal Fires).
campfirebackport.config.explain.signals_burn_out=Campfires of this type will burn out after their burn out timer has passed, even if they're signal fires. Doesn't affect campfires that have their burn out timer disabled.
campfirebackport.config.explain.burn_to_nothing=The chance for a campfire block to be destroyed when its burn timer ends. 0.0 means 0%, 1.0 means 100%. The first value is the setting for regular campfires, the second value is the setting for soul campfires. When they're destroyed, campfires will drop their inventory and their drops from being broken without Silk Touch.
campfirebackport.config.explain.signal_fire_blocks=The list of blocks that, when placed below a campfire, make its particles go higher. It's pattern validated. Format is "ore:oreName" or "modid:name" or "modid:name:meta". If meta is not given, all metas of the block work.
campfirebackport.config.explain.campfire_drops=The items the campfire will drop when broken without Silk Touch. The first entry is for regular campfires and the second entry is for soul campfires. If you leave it empty or the item isn't found, the default items will be used instead. The default item for regular campfires is two charcoal. The default item for soul campfires is one soul sand. It's pattern validated. The general simple setup is "modid:name:meta@number", with ":meta" defaulting to 0 if not included, and "@number" defaulting to 1. It can a bit more complicated than this, if you wish. Check the file in your config folder named %s (or the github) for # [Custom Output].
campfirebackport.config.explain.colourful_smoke=When receiving redstone power, campfires of this type will have coloured smoke particles based on the block below them. (The colour is based on map colours.) Mix with custom Signal Fire Blocks for best results. Credit: https://www.curseforge.com/minecraft/mc-mods/colorful-campfire-smoke
campfirebackport.config.explain.dispenser_blacklist=Prevents these items from receiving dispenser behaviours from Custom Extinguishers/Ignitors that are dispensable. It's pattern validated. Format is "modid:name".
campfirebackport.config.explain.state_changers=The list of Custom %1$ss for the %2$s campfire. It's pattern validated. Here's the general simple setup: First, put "left" for a left click action or "right" for a right click action. Then put a /. Next, an item in the format "modid:name:meta@number", with ":meta" defaulting to 0 if not included, and "@number" defaulting to 1. Then put a /. Next, put "stackable" if the item should decrease in stack size or "damageable" if the item should be damaged. The next part is optional: a >, then the output, in the same format as input. Take a look at the default %1$ss. It actually can be way more complicated than this, if you wish. Check the file in your config folder named %3$s (or the github) for # [Custom Extinguishers/Ignitors].
campfirebackport.config.explain.extinguishers_inheritance=Allows you to make campfires of one type inherit Custom Extinguishers from the other type. That way you don't have to type them all out twice.
campfirebackport.config.explain.ignitors_inheritance=Allows you to make campfires of one type inherit Custom Ignitors from the other type. That way you don't have to type them all out twice.
campfirebackport.config.explain.print_recipes=If true, prints the final list of all Campfire Recipes and Campfire State Changers on config (re)load. Use this to make sure everything worked. (Though you could just check in NEI.)
campfirebackport.config.explain.suppress_errors=If true, warnings about invalid inputs for Custom Recipes, Auto Recipe Discovery Blacklist, Signal Fire Blocks, Dispenser Behaviours Blacklist, Custom Campfire Extinguishers/Ignitors won't print to console.

campfirebackport.config.explanation.0=# Detailed Campfire Backport Config Descriptions
campfirebackport.config.explanation.1=
campfirebackport.config.explanation.2=You can also find this information at https://github.com/connor135246/Campfire-Backport/wiki.
campfirebackport.config.explanation.3=
campfirebackport.config.explanation.4=# Specific Formats
campfirebackport.config.explanation.5=# [Custom Campfire Recipes]
campfirebackport.config.explanation.6=-There are 3 sections to this one. Separate each section with a /.
campfirebackport.config.explanation.7=-The first section is # [Custom Input] (see below). "@number" is clamped between 1 and 4.
campfirebackport.config.explanation.8=-The second section is # [Custom Output] (see below).
campfirebackport.config.explanation.9=-The third section is the cooking time, which is optional. For inputs that are more than one item, all items must have reached this cooking time. 
campfirebackport.config.explanation.10=If cooking time is not given, it defaults to 600. 
campfirebackport.config.explanation.11=-The fourth section is the signal fire setting, which is optional.
campfirebackport.config.explanation.12=It can be "signal" or "notsignal".
campfirebackport.config.explanation.13="signal" means the campfire must be a signal fire to cook the item.
campfirebackport.config.explanation.14="notsignal" means the campfire must not be a signal fire to cook the item.
campfirebackport.config.explanation.15=If not included, whether or not the campfire is a signal fire doesn't matter.
campfirebackport.config.explanation.16=Some example recipes:
campfirebackport.config.explanation.17=-A raw porkchop turns into a cooked porkchop:
campfirebackport.config.explanation.18= minecraft:porkchop/minecraft:cooked_porkchop
campfirebackport.config.explanation.19=-An unlit campfire turns into a lit campfire:
campfirebackport.config.explanation.20= campfirebackport:campfire_base/campfirebackport:campfire
campfirebackport.config.explanation.21=-Regular stone bricks turns into cracked stone bricks:
campfirebackport.config.explanation.22= minecraft:stonebrick:0/minecraft:stonebrick:2
campfirebackport.config.explanation.23=-Sand or red sand turns into glass:
campfirebackport.config.explanation.24= minecraft:sand/minecraft:glass
campfirebackport.config.explanation.25=-4 rotten flesh turns into 2 leather after 600 ticks:
campfirebackport.config.explanation.26= minecraft:rotten_flesh@4/minecraft:leather@2
campfirebackport.config.explanation.27=-A stick turns into 4 torches after 20 ticks:
campfirebackport.config.explanation.28= minecraft:stick/minecraft:torch@4/20
campfirebackport.config.explanation.29=-A birch log turns into 2 charcoal after 1 minute:
campfirebackport.config.explanation.30= minecraft:log:2/minecraft:coal:1@2/1200
campfirebackport.config.explanation.31=-4 items in the logWood ore dictionary turns into 5 charcoal after 30 seconds, but only campfires that aren't signal fires:
campfirebackport.config.explanation.32= ore:logWood@4/minecraft:coal:1@5/600/notsignal
campfirebackport.config.explanation.33=-Any music disc turns into a diamond after 4321 ticks, but only on signal fire campfires:
campfirebackport.config.explanation.34= ore:record/minecraft:diamond/4321/onlysignal
campfirebackport.config.explanation.35=-An undamaged wooden sword is enchanted with fire aspect II after 5 seconds:
campfirebackport.config.explanation.36= minecraft:wooden_sword:0/minecraft:wooden_sword[ench:20,2]/100
campfirebackport.config.explanation.37=-2 iron pickaxes each enchanted with efficieny of at least level 2 turns into a damaged diamond pickaxe after 5 minutes:
campfirebackport.config.explanation.38= minecraft:iron_pickaxe[ench:32,2]@2/minecraft:diamond_pickaxe:900/6000
campfirebackport.config.explanation.39=-3 items in the blockGlass ore dictionary enchanted with smite level 4 or higher turns into 4 gold ingots named "Stewart" and enchanted with knockback 10 and looting 6:
campfirebackport.config.explanation.40= ore:blockGlass[ench:17,4]@3/minecraft:gold_ingot{display:{Name:"Stewart"},ench:[{id:19,lvl:10},{id:21,lvl:6}]}@4
campfirebackport.config.explanation.41=-Any item enchated with sharpness of at least level 1 turns into an egg
campfirebackport.config.explanation.42= [ench:16,1]/minecraft:egg
campfirebackport.config.explanation.43=-3 of any pickaxe turns into a diamond hoe with knockback 10 after 1 second
campfirebackport.config.explanation.44= tool:pickaxe@3/minecraft:diamond_hoe[ench:19,10]/20
campfirebackport.config.explanation.45= 
campfirebackport.config.explanation.46=# [Custom Extinguishers/Ignitors]
campfirebackport.config.explanation.47=-There are 3 sections to this one. Separate each section with a /.
campfirebackport.config.explanation.48=-The first section is the way this extinguisher/ignitor can be used.
campfirebackport.config.explanation.49=It can be "left" or "right", for left click or right click.
campfirebackport.config.explanation.50=Additionally, you can add "+dispensable" to make this extinguisher/ignitor work in a dispenser as well. More on this in a second.
campfirebackport.config.explanation.51=-The second section is # [Custom Input] (see below), but there are some differences.
campfirebackport.config.explanation.52=If you added "+dispensable" to the first section, # [Custom Input] shouldn't be an NBT-only input.
campfirebackport.config.explanation.53=If you do add "+dispensable" to an NBT-only input, it'll be treated as not having "+dispensable" and you'll get a warning in console.
campfirebackport.config.explanation.54=USE CAUTION when assigning "+dispensable", if the item you specify already has a dispenser behaviour, that behaviour will be overwritten.
campfirebackport.config.explanation.55=For example, if you add "+dispensable" to a fire charge, dispensers will no longer fire them as projectiles.
campfirebackport.config.explanation.56=This is just because of the way dispenser behaviours work in minecraft.
campfirebackport.config.explanation.57=IMPORTANT: Dispenser behaviours are ONLY registered when the game is loaded!
campfirebackport.config.explanation.58=When you add a dispensable recipe from the in-game config screen, it won't actually be dispensable until you quit and reload!
campfirebackport.config.explanation.59=In the same way, if you remove a dispensable recipe, it won't actually stop being dispensable until you quit and reload!
campfirebackport.config.explanation.60=-The third section is what should happen after extinguishing/igniting the campfire.
campfirebackport.config.explanation.61="stackable" means the item used will be reduced in stack size by the "@number" from # [Custom Input].
campfirebackport.config.explanation.62="damageable" means the item used will be damaged by the "@number" from # [Custom Input].
campfirebackport.config.explanation.63="none" means neither of these things will happen.
campfirebackport.config.explanation.64=Additionally, you can specify an item to be added to the inventory afterward by putting a >, and then a # [Custom Output] (see below).
campfirebackport.config.explanation.65=Some example extinguishers/ignitors:
campfirebackport.config.explanation.66=-Right-clicking with a snow block turns into 2 snowballs and can be used from a dispenser
campfirebackport.config.explanation.67= right+dispensable/minecraft:snow/stackable>minecraft:snowball@2
campfirebackport.config.explanation.68=-Right-clicking with a milk bucket turns into an empty bucket
campfirebackport.config.explanation.69= right/minecraft:milk_bucket/stackable>minecraft:bucket
campfirebackport.config.explanation.70=-Left-clicking with any sword enchanted with fire aspect and can be used from a dispenser
campfirebackport.config.explanation.71= left+dispensable/class:net.minecraft.item.ItemSword[ench:20,1]/damageable
campfirebackport.config.explanation.72=-Right-clicking with any shovel and can be used from a dispenser
campfirebackport.config.explanation.73= right+dispensable/tool:shovel/damageable
campfirebackport.config.explanation.74=-Left-clicking with any Tinker's Construct tool that has Auto-Smelt
campfirebackport.config.explanation.75= left/[Tinkers:[B:{Lava:1}]]/damageable
campfirebackport.config.explanation.76=-Left-clicking with 5 of any stickWood and can be used from a dispenser
campfirebackport.config.explanation.77= left+dispensable/ore:stickWood@5/stackable
campfirebackport.config.explanation.78=-Left-clicking with a bow enchanted with flame damages it by 10 points
campfirebackport.config.explanation.79= left/minecraft:bow[ench:50,1]@10/damageable
campfirebackport.config.explanation.80=-Right-clicking with immersive engineering's jerrycan with at least 1000 mB of water (uses the water)
campfirebackport.config.explanation.81= right/ImmersiveEngineering:jerrycan[Fluid:"water",MinAmount:1000]/none
campfirebackport.config.explanation.82=-Right-clicking with a wooden sword returns a wooden sword enchanted with fire aspect
campfirebackport.config.explanation.83= right/minecraft:wooden_sword/stackable>minecraft:wooden_sword[ench:20,2]
campfirebackport.config.explanation.84=-Left-clicking with 3 of any stairs enchanted with fire aspect of at least level 3 returns a lit furnace named Oops
campfirebackport.config.explanation.85= left/class:net.minecraft.block.BlockStairs[ench:20,3]/stackable>minecraft:furnace:1{display:{Name:"Oops"}}
campfirebackport.config.explanation.86=
campfirebackport.config.explanation.87= 
campfirebackport.config.explanation.88=# General Formats
campfirebackport.config.explanation.89=# [Custom Input]
campfirebackport.config.explanation.90=-It can be based on a namespaced Item, an Ore Dictionary entry, a tool class, a Class, or NBT.
campfirebackport.config.explanation.91=-Namespaced Items are in the format "modid:name:metadata".
campfirebackport.config.explanation.92=The ":metadata" part is optional. If it isn't there, any metadata of the item will work.
campfirebackport.config.explanation.93=For example, minecraft:sand refers to both Sand and Red Sand, but minecraft:sand:0 refers to only Sand.
campfirebackport.config.explanation.94=-Ore Dictionary entries are in the format "ore:oreName".
campfirebackport.config.explanation.95=For example, ore:logWood refers to anything registered in the logWood ore.
campfirebackport.config.explanation.96=-Tool classes are in the format "tool:toolClass".
campfirebackport.config.explanation.97=There are 3 vanilla tool classes: pickaxe, shovel, and axe. Simply type tool:pickaxe or tool:shovel or tool:axe.
campfirebackport.config.explanation.98=Modded tool classes work as well.
campfirebackport.config.explanation.99=-Classes are more technical. They refer to the actual Java Class used by an item or block.
campfirebackport.config.explanation.100=You may have to dip into the vanilla code or the github of other mods to get it. It has to be a full package and class name, prepended by "class:".
campfirebackport.config.explanation.101=For example, class:net.minecraft.item.ItemSword refers to any item that uses the ItemSword Class or extends it, which includes all vanilla swords.
campfirebackport.config.explanation.102=Another example, class:net.minecraft.block.BlockStairs, refers to any block that uses the BlockStairs Class or extends it, which includes all vanilla stairs.
campfirebackport.config.explanation.103=Mods usually will extend the vanilla classes, especially for things like swords and armor. That's the main intended use.
campfirebackport.config.explanation.104=There's no check here other than that the class exists, so you could technically do class:net.minecraft.item.Item to refer to every single item in the game, but I really wouldn't recommend it.
campfirebackport.config.explanation.105=-Next is the NBT, which can be attached to an Item/Ore/tool/Class or exist on its own. You can type it out exactly like you would in a command.
campfirebackport.config.explanation.106=For example, minecraft:diamond_pickaxe{display:{Name:"Super Pick"}}.
campfirebackport.config.explanation.107=Unfortunately, this modifier isn't very useful. That's because the NBT tag must match EXACTLY.
campfirebackport.config.explanation.108=For example, you might want to check for the Unbreaking enchantment on a Golden Shovel, so you type minecraft:golden_shovel{ench:[{id:34,lvl:1}]}.
campfirebackport.config.explanation.109=But this will refer to Golden Shovels whose only enchantment is Unbreaking at exactly level 1 without any other NBT.
campfirebackport.config.explanation.110=So some specific NBT things have been given a special format you can type it in to test in a more lenient way.
campfirebackport.config.explanation.111=For enchantments, that format is "[ench:id,minlevel]".
campfirebackport.config.explanation.112=For example, minecraft:golden_shovel[ench:34,1] refers to any Golden Shovel that has an Unbreaking enchantment of at least level 1, and may or may not have other NBT.
campfirebackport.config.explanation.113=Another special NBT format is the Fluid Container format, for items that hold fluids: "[Fluid:"fluidname",MinAmount:minamount]".
campfirebackport.config.explanation.114=For example, examplemod:fluidcontainer[Fluid:"water",MinAmount:1000] will check for at least 1000 mB of water in the fluidcontainer from examplemod.
campfirebackport.config.explanation.115=The last NBT format is even more special than the others. This one can only exist on its own, without an Item/Ore/tool/Class.
campfirebackport.config.explanation.116=It's the Tinker's Construct Modifiers format. It allows you to check whether a Tinker's tool has specific modifiers on it.
campfirebackport.config.explanation.117=This one's rather complicated, so it gets its own section. See # [Tinker's Construct Modifiers Format].
campfirebackport.config.explanation.118=By the way, NBT-only inputs will display in NEI as a written book. Hover over it to see what you want to know.
campfirebackport.config.explanation.119=-Lastly, there's the number of inputs. You can set it by adding "@number" to the end of your input.
campfirebackport.config.explanation.120=For example, minecraft:dye:4@64 or ore:ingotIron@15 or minecraft:stone_axe[ench:16,3]@4.
campfirebackport.config.explanation.121=It's set to 1 by default if not included.
campfirebackport.config.explanation.122=-Check the console for error messages if your input didn't parse! 
campfirebackport.config.explanation.123=-NOTE: The NBT modifier doesn't check for valid NBT formatting! All it checks is that there's something between two {} curly brackets. Error messages will be printed to console if your NBT failed to parse.
campfirebackport.config.explanation.124=-Tip: Recipes and Extinguishers/Ignitors are sorted based on their input. 
campfirebackport.config.explanation.125=Recipes created by Auto Recipe Discovery are lowest, followed by Data inputs, followed by Class inputs, followed by Ore Dictionary inputs, followed by Item inputs that don't specify a meta, followed by Item inputs that do.
campfirebackport.config.explanation.126=Within each of these categories, inputs with NBT data have higher priority, and inputs that have a size greater than 1 have the most priority.
campfirebackport.config.explanation.127=When you try to use an item on a campfire, it will use whatever recipe matches first. (Also, Recipes are checked before Extinguishers/Ignitors.) 
campfirebackport.config.explanation.128=This allows you to have, for example, an Ore Dictionary recipe that applies to every logWood, but allows you to override it for specific logWood if you'd like.
campfirebackport.config.explanation.129=Check the order of your recipes by setting the config option #Debug: Print Campfire Recipes to true, or just viewing recipes in NEI.
campfirebackport.config.explanation.130=
campfirebackport.config.explanation.131=# [Custom Output]
campfirebackport.config.explanation.132=-It's based on a namespaced Item.
campfirebackport.config.explanation.133=-Namespaced Items are in the format "modid:name:metadata".
campfirebackport.config.explanation.134=The ":metadata" part is optional. If it isn't there, it defaults to 0.
campfirebackport.config.explanation.135=For example, minecraft:coal and minecraft:coal:0 both refer to coal, and minecraft:coal:1 refers to charcoal.
campfirebackport.config.explanation.136=Once you've typed out your namespaced Item, you can add optional modifiers to the recipe.
campfirebackport.config.explanation.137=-The first modifier is the NBT. Type it out exactly like you would in a command.
campfirebackport.config.explanation.138=For example, minecraft:diamond_pickaxe{display:{Name:"Super Pick"}}.
campfirebackport.config.explanation.139=Or you can use one of the special formats from # [Custom Input] (but NOT # [Tinker's Construct Modifiers Format]).
campfirebackport.config.explanation.140=For example, minecraft:stone_axe[ench:16,3].
campfirebackport.config.explanation.141=-The second modifier is the number of outputs. You can set it by adding @number to the end of your output.
campfirebackport.config.explanation.142=For example, minecraft:dye:4@2 or mineraft:iron_ingot@13 or minecraft:stone_axe[ench:16,3]@64.
campfirebackport.config.explanation.143=It's set to 1 by default if not included.
campfirebackport.config.explanation.144=NOTE: The NBT modifier doesn't check for valid NBT formatting! All it checks is that there's something between two {} curly brackets. Error messages will be printed to console if your NBT failed to parse.
campfirebackport.config.explanation.145=
campfirebackport.config.explanation.146=# [Tinker's Construct Modifiers Format]
campfirebackport.config.explanation.147=I'd recommend using TiC Tooltips to see more information about modifiers.
campfirebackport.config.explanation.148=-General Format:
campfirebackport.config.explanation.149=    [Tinkers:[I:{integer modifiers}B:{byte modifiers}F:{float modifiers}IA:{integer array modifiers}]
campfirebackport.config.explanation.150=Each section is optional, but they must be in the order Integer, Byte, Float, Integer Array.
campfirebackport.config.explanation.151=Each section can contain multiple modifiers separated by commas.
campfirebackport.config.explanation.152=Below are the supported modifiers organized by section.
campfirebackport.config.explanation.153=-Integer Modifiers: These can be any integer, almost always positive. They will match items with the given value or greater.
campfirebackport.config.explanation.154=    HarvestLevel
campfirebackport.config.explanation.155=    MiningSpeed
campfirebackport.config.explanation.156=    Beheading
campfirebackport.config.explanation.157=    Fiery (25 Blaze Powder per modifier slot)
campfirebackport.config.explanation.158=    Necrotic (Called Life Steal in the tooltip.)
campfirebackport.config.explanation.159=    Unbreaking (Called Reinforced in the tooltip.)
campfirebackport.config.explanation.160=    Moss (Called Auto-Repair in the tooltip. Ball of Moss sets it to 3.)
campfirebackport.config.explanation.161=-Byte Modifiers: These are 1 or 0, where 1 means true and 0 means false. They will match items with the exact value given.
campfirebackport.config.explanation.162=    Lava (Called Auto-Smelt in the tooltip.)
campfirebackport.config.explanation.163=    Emerald (Called Durability +50% in the tooltip.)
campfirebackport.config.explanation.164=    Diamond (Called Durability +500 in the tooltip.)
campfirebackport.config.explanation.165=    SilkTouch (Called Silky in the tooltip.)
campfirebackport.config.explanation.166=    Broken (Whether the tool is broken or not.)
campfirebackport.config.explanation.167=    Flux (If the tool uses RF instead of durability.)
campfirebackport.config.explanation.168=-Float Modifiers: These can be any decimal number. If positive, they will match items with the given value or greater. If negative, they will match items with the given value or smaller. If zero, they will match items with exactly zero.
campfirebackport.config.explanation.169=    Knockback (Goes up 0.1 at a time. 10 Pistons per modifier slot)
campfirebackport.config.explanation.170=    Shoddy (positive values indicate Stonebound, negative values indicate Jagged.)
campfirebackport.config.explanation.171=-Integer Array Modifiers: These can be any integer, always positive. They will match items with the given value or greater.
campfirebackport.config.explanation.172=    Redstone (Called Haste in the tooltip. 50 Redstone per modifier slot)
campfirebackport.config.explanation.173=    ModAttack (Called Sharpness in the tooltip. 72 Quartz per modifier slot)
campfirebackport.config.explanation.174=    ModSmite (Called Smite in the tooltip. 36 Consecrated Soil per modifier slot)
campfirebackport.config.explanation.175=    ModAntiSpider (Called Bane of Arthropods in the tooltip. 4 Fermented Spider Eyes per modifier slot)
campfirebackport.config.explanation.176=    Lapis (Called Luck in the tooltip. Fortune for pickaxes, Looting for swords. 450 Lapis Lazuli is the maximum)
campfirebackport.config.explanation.177=Any arbitrary modifier should work as long as you put it in the correct section. The above modifiers will look nicer in NEI though.
campfirebackport.config.explanation.178=Some examples:
campfirebackport.config.explanation.179=-Matches any Tinker's Construct tool:
campfirebackport.config.explanation.180=    [Tinkers:[]]
campfirebackport.config.explanation.181=-Matches any tool that's had at least one Blaze Powder added to it:
campfirebackport.config.explanation.182=    [Tinkers:[I:{Fiery:1}]]
campfirebackport.config.explanation.183=-Matches any tool with Auto-Smelt:
campfirebackport.config.explanation.184=    [Tinkers:[B:{Lava:1}]]
campfirebackport.config.explanation.185=-Matches any tool that isn't broken:
campfirebackport.config.explanation.186=    [Tinkers:[B:{Broken:0}]]
campfirebackport.config.explanation.187=-Matches a tool that's Jagged, with at least one Redstone added to it, with a Diamond added to it, and with a Harvest Level of at least 1 (stone pickaxe level):
campfirebackport.config.explanation.188=    [Tinkers:[I:{HarvestLevel:1}B:{Diamond:1}F:{Shoddy:-1.0}IA:{Redstone:1}]]
campfirebackport.config.explanation.189=-Matches a tool that's Stonebound 2, with Auto-Smelt, with Beheading 1 or greater, with a Ball of Moss added to it, with at least one full modifier of Fiery (25 Blaze Powder), and with at least half a modifier of Knockback (5 Pistons):
campfirebackport.config.explanation.190=    [Tinkers:[I:{Beheading:1,Moss:3,Fiery:25}B:{Lava:1}F:{Shoddy:2.0,Knockback:0.5}]]
campfirebackport.config.explanation.191=
campfirebackport.config.explanation.192=# Also...
campfirebackport.config.explanation.193=Added a command, "/campfirebackport_nbt".
campfirebackport.config.explanation.194=If you use it without any arguments, it will print the NBT of your held item to chat.
campfirebackport.config.explanation.195=You can also use it like "/campfirebackport_nbt <x> <y> <z>" in which case it will print the NBT of a tile entity at that location to chat.
campfirebackport.config.explanation.196=Basically, it's like "/data get" from 1.13+, or "/blockdata", "/entitydata" from 1.12.
